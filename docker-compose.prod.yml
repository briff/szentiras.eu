name: szeu-prod

services:
  traefik:
    image: traefik:v3.3
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.email=postmaster@szentiras.eu
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - traefik
      - default
  app:
    image: szeu-app-prod
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - GIT_COMMIT_HASH=${GIT_COMMIT_HASH:-}
    # Use this when building: GIT_COMMIT_HASH=$(git rev-parse HEAD) docker compose ...
    env_file:
      - path: ./.env.prod # write your customizations here - these are used as environment variables, not from the file inside the container
        required: false
    volumes:
      - storage:/var/www/html/storage
      - sphinx_trigger:/opt/sphinx/trigger
    depends_on:
      database:
        condition: service_healthy
      sphinx:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.myapp.rule=Host(`${APP_DOMAIN}`) || Host(`www.${APP_DOMAIN}`)
      - traefik.http.services.myapp.loadbalancer.server.port=80
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.myapp.middlewares=mywwwredirect,hsts
      - traefik.http.middlewares.myapp.compress=true
      - traefik.http.middlewares.hsts.headers.stsSeconds=31536000
      - traefik.http.middlewares.hsts.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.hsts.headers.stsPreload=true
      
    networks:
      - traefik
  sphinx:
    image: macbre/sphinxsearch:3.7.1
    volumes:
      - ./deploy/production/sphinx/sphinx.conf.in:/etc/sphinxsearch/sphinx.conf.in
      - ./docker/sphinx/start.sh:/opt/sphinx/start.sh
      - ./docker/sphinx/reindex.sh:/opt/sphinx/reindex.sh
      - sphinx_data:/opt/sphinx/indexes
      - sphinx_trigger:/opt/sphinx/trigger
    mem_limit: 64m
    env_file:
      - ./.env.prod
    depends_on:
      database:
        condition: service_healthy
    networks:
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "searchd --config /etc/sphinxsearch/sphinx.conf --status"]
      start_period: 1m
      interval: 10s
      timeout: 5s
      retries: 3      
    command: sh -c "/opt/sphinx/start.sh"
  database:
    image: pgvector/pgvector:pg17
    env_file:
      - ./.env.prod # for the database credentials
    networks:
      - traefik
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homestead -d bible"]
      start_period: 1m
      interval: 10s
      timeout: 5s
      retries: 3      
  memcached:
    image: memcached:1.6
    command:
      - --memory-limit=448
    networks:
      - traefik
volumes:
  db-data:
  storage:
  letsencrypt:
  sphinx_data:
  sphinx_trigger:
networks:
  traefik:
